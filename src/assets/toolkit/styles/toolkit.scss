/**
 * Toolkit styles
 */
//@import 'node_modules/singularitygs/stylesheets/singularitygs';
@import 'node_modules/modularscale-sass/stylesheets/modularscale';
@import 'vendor/normalize';
@import "node_modules/ritmo/_ritmo.scss";
@import "config";
@import 'helpers/helpers';
@import 'node_modules/breakpoint-sass/stylesheets/_breakpoint'; // or 'breakpoint-sass' when using npm
@import 'node_modules/breakpoint-slicer/stylesheets/breakpoint-slicer';

$slicer-breakpoints: 0px 480px 768px 992px 1200px;
$slicer-breakpoint-names: xs sm md lg;

.grid-item{
    border:2px solid red;
}
.wrapper {
    display: grid;
   // grid-template-columns: repeat(3, 1fr);

  /*  @include from(lg) {
        grid-template-columns: 1px 2fr 4fr 1fr;
    }
    @include to(sm) {
        grid-template-columns: 1fr  1fr;
    }
    @include at(md) {
        grid-template-columns: 3fr  1fr;
    }
    grid-gap: 26px;*/
    display: grid;
    grid-template-rows: repeat(3, 200px);
    grid-gap: 10px;
    grid-auto-flow: column;
    grid-auto-columns: 300px 100px;

    background-color: #fff;
    color: #444;
}

.box {
    background-color: #444;
    color: #fff;
    border-radius: 5px;
    padding: 20px;
    font-size: 150%;
}

$baseLineHeight:1.5; // how large the line height is as a multiple of font size
$leading:$baseLineHeight * 1rem;
// Rate of growth for headings
// I actually like this to be slightly smaller then the leading. Makes for tight headings.
$scale:1.414;

/* Setup */
.sixteen-nine {
    @include aspect-ratio(4, 3);
    overflow: hidden;
    // max-width:400px;
    background-color: $dark-gray;
}

img.responsive{
    //@include maintain-ratio(1 1);
    max-width: 100%;
    width: 100%;
    //height: auto;
}
html {
  @include doTypeset(map_get($type-style, 'base'));

    /* Change default typefaces here */

   // @include(map_get(  $typestyles, base));

    // Make everything look a little nicer in webkit
    -webkit-font-smoothing: antialiased;
    // -webkit-text-size-adjust: auto
    // -moz-text-size-adjust: auto
    // -ms-text-size-adjust: auto
    // -o-text-size-adjust: auto
    // text-size-adjust: auto
    @include texture($khaki, 38, 1);
}

h1,
h2,
h3,
h4,
h5,
h6 {

    @include doTypeset(map_get($type-style, heading));

}
/* Copy & Lists */
/*
p {
    line-height: $leading;
    margin-top: $leading;
    margin-bottom: 0;
    letter-spacing: -.2px;
}
ul,
ol {
    margin-top: $leading;
    margin-bottom: $leading;
    li {
        line-height: $leading;
    }
    ul,
    ol {
        margin-top: 0;
        margin-bottom: 0;
    }
}
blockquote {
    line-height: $leading;
    margin-top: $leading;
    margin-bottom: $leading;
}*/
/* Headings */

/*h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: 'Random2';
    margin-top: $leading;
    margin-bottom: 0;
    line-height: 1.5;

}
h1 {

    font-weight: bold;
    font-family: 'PostGrotesk-Medium';

}
h2 {
    // line-height: 2 * $leading;
    margin-top: 2 * $leading;
}
h3 {
}
h4 {
    text-transform: uppercase;
}
h5 {
}
h6 {
}*/
/* Tables */

table {
    margin-top: $leading;
    border-spacing: 0px;
    border-collapse: collapse;
}
td,
th {
    padding: 0;
  //  line-height: $baseLineHeight * $baseFontSize - 0px;
}
/* Code blocks */

code {
    // Forces text to constrain to the line-height. Not ideal, but works.
    // vertical-align: bottom;
    //font-family: 'Random';
  //  text-transform: uppercase;

}
/* Leading paragraph text */

.lead {
    //@include ms-respond(font-size, 2);
    line-height: 1.5;
}

/* Hug a the block above you */

.hug {
    margin-top: 0;
}


%specialchildprops {
   /* display: block;
    background: blue;
    &:visited{
        background-color: red;

    }

    a{

    }*/

}

%specialchildprops2 {
    //display: block;
   // background: chartreuse;

}



@mixin generateButtons($prefix:'.g',$container-key : default,$theme-key :default, $type-style-key:default) {

    $container: map_get($containerset, btn);
    $mytypestyle: map_get($type-style, $type-style-key);
    //color scheme variants
    $themeset-inverted: map-swap-key(map_get($themeset, $theme-key), foreground, background);
    $themeset-accent: map-swap-key(map_get($themeset, $theme-key), accent, background);

    @if $prefix != null {
        $classname: $prefix + "-" +  $container-key+"-" + $theme-key;
        @debug $classname;
        @include component($classname, $container, map_get($themeset, $theme-key), $mytypestyle,true);
        @include component($classname + '-inverted', $container, $themeset-inverted, $mytypestyle,true);
        @include component($classname+'-accent', $container, $themeset-accent, $mytypestyle,true);
    }
}
@include generateButtons('.g-btn', default, primary, heading);

